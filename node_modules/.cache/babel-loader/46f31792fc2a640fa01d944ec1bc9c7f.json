{"ast":null,"code":"import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport initialState from './initialState';\nimport shortid from 'shortid';\n\nconst reducer = (state, action) => {\n  /* state- current state, action- object informed what we should do */\n  if (action.type === 'ADD_COLUMN') return { ...state,\n    columns: [...state.columns, { ...action.newColumn\n    }]\n  };\n  return state;\n};\n\nconst store = createStore(reducer, initialState, composeWithDevTools());\nexport default store;","map":{"version":3,"names":["createStore","composeWithDevTools","initialState","shortid","reducer","state","action","type","columns","newColumn","store"],"sources":["/Users/maciejkusztal/Documents/GitHub/to-do-app/src/redux/store.js"],"sourcesContent":["import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport initialState from './initialState';\nimport shortid from 'shortid';\n\nconst reducer = (state, action) => {\n  /* state- current state, action- object informed what we should do */\n  if (action.type === 'ADD_COLUMN')\n    return {\n      ...state,\n      columns: [...state.columns, { ...action.newColumn,  }],\n    };\n  return state;\n};\n\nconst store = createStore(reducer, initialState, composeWithDevTools());\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC;EACA,IAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EACE,OAAO,EACL,GAAGF,KADE;IAELG,OAAO,EAAE,CAAC,GAAGH,KAAK,CAACG,OAAV,EAAmB,EAAE,GAAGF,MAAM,CAACG;IAAZ,CAAnB;EAFJ,CAAP;EAIF,OAAOJ,KAAP;AACD,CARD;;AAUA,MAAMK,KAAK,GAAGV,WAAW,CAACI,OAAD,EAAUF,YAAV,EAAwBD,mBAAmB,EAA3C,CAAzB;AAEA,eAAeS,KAAf"},"metadata":{},"sourceType":"module"}